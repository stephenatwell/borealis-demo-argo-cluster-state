version: v1
kind: kubernetes
application: potato-facts3
# Map of Deployment Targets, this is set up in a way where 
# we can do multi-target deployments (multi-region or multi-cluster)
targets:
  # This in the name of a deployment, underneath it are its configuration
  staging:
    # the name of an agent configured account
    account: demo-staging-cluster
    # Optionally override the namespaces that are in the manifests
    namespace: borealis-staging
    # This is the key to a strategy under the strategies map
    strategy: rolling
    # This is a list of manifest names that should be included in this deployment
    constraints:
      afterDeployment:
        - runWebhook:
            name: Run_Integration_Tests
  prod-west:
    # the name of an agent configured account
    account: demo-prod-west-cluster
    # Optionally override the namespaces that are in the manifests
    namespace: borealis-prod
    # This is the key to a strategy under the strategies map
    strategy: mycanary
    constraints:
      dependsOn: ["staging"]
  prod-eu:
    # the name of an agent configured account
    account: demo-prod-eu-cluster
    # Optionally override the namespaces that are in the manifests
    namespace: borealis-prod-eu
    # This is the key to a strategy under the strategies map
    strategy: mycanary
    constraints:
      dependsOn: [ "staging" ]
# The list of manifests sources
manifests:
  # This will read all yaml|yml files in a dir and deploy all manifests in that directory to all targets.
  - path: /manifests/potato-facts.yml
  - path: /manifests/potato-facts-external-service.yml
    targets: [prod-west, prod-eu]
# The map of strategies, a deployment target will reference one of these
strategies:
  # this is the name for the strategy
  mycanary:
    # This map key, is the deployment strategy type
    canary: 
        # List of canary steps
        steps:
          # The map key is the step type
          - setWeight:
              weight: 25
          - analysis:
              interval: 30
              units: seconds
              numberOfJudgmentRuns: 1
              queries:
              - avgCPUUsage-pass
              - avgRAMUsage-pass
          - setWeight:
              weight: 50
          - analysis:
              interval: 30
              units: seconds
              numberOfJudgmentRuns: 3
              queries: 
              - avgCPUUsage-pass
              - avgRAMUsage-pass
          - setWeight:
              weight: 100
  rolling:
    canary:
      steps: 
      - setWeight:
          weight: 100
analysis:
  defaultMetricProviderName: Stephen-Prometheus
  queries:
    - name: avgCPUUsage-pass
      upperLimit: 95 #3
      lowerLimit: 0
      queryTemplate: >-
        avg(rate(container_cpu_user_seconds_total{job="kubelet"}[{{armory.promQlStepInterval}}]) * 100 * on (pod) group_left (annotation_app)
        sum(kube_pod_annotations{job="kube-state-metrics",annotation_deploy_armory_io_replica_set_name="{{armory.replicaSetName}}"})
        by (annotation_app, pod)) by (annotation_app)  or on() vector(0)
    - name: avgRAMUsage-pass
      upperLimit: 100 #3
      lowerLimit: 0
      queryTemplate: >-
        avg((avg(avg_over_time( container_memory_working_set_bytes{job="kubelet"}[30s])) by (pod) / on (pod) 
        avg( avg_over_time(container_spec_memory_limit_bytes{}[30s]))  by (pod) )   * on (pod)  group_left (annotation_app)
        sum(kube_pod_annotations{job="kube-state-metrics",annotation_deploy_armory_io_replica_set_name="{{armory.replicaSetName}}"}) by (annotation_app, pod)) by (annotation_app)  or on() vector(0)
    
webhooks:
  - name: Run_Integration_Tests
    method: POST
    uriTemplate: https://api.github.com/repos/{{secrets.github_org}}/{{secrets.github_repository}}/dispatches
    networkMode: direct
    headers:
      - key: Authorization
        value: token {{secrets.github_token}}
      - key: Content-Type
        value: application/json
    bodyTemplate:
      inline:  >-
        {
        "event_type": "checkLogs",
        "client_payload": {
            "callbackUri": "{{armory.callbackUri}}/callback"
            }
        }
    retryCount: 3
