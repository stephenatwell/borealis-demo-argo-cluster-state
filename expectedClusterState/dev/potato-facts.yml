apiVersion: apps/v1
kind: Deployment
metadata:
  name: potato-facts
  namespace: borealis
  annotations: 
    "app": "potato-facts"
    "prometheus.io/scrape": "true"
spec:
  revisionHistoryLimit: 10
  replicas: 4
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  selector:
    matchLabels:
      app: potato-facts
  template:
    metadata:
      labels:
        app: potato-facts
      annotations: 
        "app": "potato-facts"
        "prometheus.io/scrape": "true"
    spec:
      containers:
#      - image:  armory/potato-facts:v1.5.1 #v1.6.0 # v1.7.0
      - image:  index.docker.io/armory/potatofacts:v1.5.1 #demoimages/bluegreen:v3 #v5, v4, v3
        imagePullPolicy: Always
        name: potato-facts
        resources:
          limits:
            cpu: "10m" # this is to ensure the above busy wait cannot DOS a low CPU cluster.
            memory: "70Mi"
          requests:
            cpu: "10m" # this is to ensure the above busy wait cannot DOS a low CPU cluster.
            memory: "70Mi"
        env:
        - name: NEW_RELIC_AGENT_ENBALED
          value: 'false'
        - name: APPLICATION_NAME
          value: potatofacts
        - name: APPLICATION_ENVIRONMENT
          value: prod
        - name: APPLICATION_VERSION
          value: "v1.5.0"
        #ports:
        #  - containerPort: 8086
      restartPolicy: Always


#---
#apiVersion: v1
#kind: Service
#metadata:
#  labels:
#    app: potato-facts
#  name: potato-facts
#  namespace: borealis
#spec:
#  ports:
#  - name: gate-tcp
#    port: 80
#    protocol: TCP
#    targetPort: 8086
#  selector:
#    app: potato-facts
#  type: ClusterIP


---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: potato-facts
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: potato-facts
  minReplicas: 2
  maxReplicas: 4
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50














